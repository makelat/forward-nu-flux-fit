mode='xsec'
#mode='evts'

material='W'
#material='Ar'
#material='Fe'
#material='Pb'

#Incoming mu, e neutrinos, mumu final states
#procs=[['8','numu'], ['11','nubarmu'], ['2','nuel'], ['5','nubarel'], ['23','nutau'], ['28','nubartau']]

#Relevant for computing g' approximation grid points
#procs=[['8','numu'], ['2','nuel'], ['23','nutau']]
#procs=[['11','nubarmu']]
procs=[['8','numu']]

##ee FS
#procs=[['1', '12_ee'],\
#       ['4', '-12_ee'],\
#       ['7', '14_ee'],\
#       ['10','-14_ee'],\
#       ['22','16_ee'],\
#       ['27','-16_ee']]
##emu FS
#procs=[['3', '12_emu'],\
#       ['6', '-12_emu'],\
#       ['9', '14_emu'],\
#       ['12','-14_emu']]
##etau FS
#procs=[['14','12_etau'],\
#       ['16','-12_etau'],\
#       ['24','16_etau'],\
#       ['29','-16_etau']]
##mutau FS
#procs=[['18','14_mutau'],\
#       ['20','-14_mutau'],\
#       ['25','16_mutau'],\
#       ['30','-16_mutau']]
##tautau FS
#procs=[['13','12_tautau'],\
#       ['15','-12_tautau'],\
#       ['17','14_tautau'],\
#       ['19','-14_tautau'],\
#       ['21','16_tautau'],\
#       ['26','-16_tautau']]

##All non-mumu FS
#procs=[['1',  '12_ee'],    ['7',  '14_ee'],    ['22', '16_ee'],
#       ['4', '-12_ee'],    ['10','-14_ee'],    ['27','-16_ee'],
#       ['3',  '12_emu'],   ['9',  '14_emu'],
#       ['6', '-12_emu'],   ['12','-14_emu'],
#       ['14', '12_etau'],  ['24', '16_etau'],
#       ['16','-12_etau'],  ['29','-16_etau'],
#       ['18', '14_mutau'], ['25', '16_mutau'],
#       ['20','-14_mutau'], ['30','-16_mutau'],
#       ['13', '12_tautau'],['17', '14_tautau'],['21', '16_tautau'],
#       ['15','-12_tautau'],['19','-14_tautau'],['26','-16_tautau']]


Enu = ['1.00000000e+00',\
       '1.25892541e+00',\
       '1.58489319e+00',\
       '1.99526231e+00',\
       '2.51188643e+00',\
       '3.16227766e+00',\
       '3.98107171e+00',\
       '5.01187234e+00',\
       '6.30957344e+00',\
       '7.94328235e+00',\
       '1.00000000e+01',\
       '1.25892541e+01',\
       '1.58489319e+01',\
       '1.99526231e+01',\
       '2.51188643e+01',\
       '3.16227766e+01',\
       '3.98107171e+01',\
       '5.01187234e+01',\
       '6.30957344e+01',\
       '7.94328235e+01',\
       '1.00000000e+02',\
       '1.25892541e+02',\
       '1.58489319e+02',\
       '1.99526231e+02',\
       '2.51188643e+02',\
       '3.16227766e+02',\
       '3.98107171e+02',\
       '5.01187234e+02',\
       '6.30957344e+02',\
       '7.94328235e+02',\
       '1.00000000e+03',\
       '1.25892541e+03',\
       '1.58489319e+03',\
       '1.99526231e+03',\
       '2.51188643e+03',\
       '3.16227766e+03',\
       '3.98107171e+03',\
       '5.01187234e+03',\
       '6.30957344e+03',\
       '7.94328235e+03',\
       '1.00000000e+04']

#Enu = ['1.00000000e+04',\
#       '1.25892541e+04',\
#       '1.58489319e+04',\
#       '1.99526231e+04',\
#       '2.51188643e+04',\
#       '3.16227766e+04',\
#       '3.98107171e+04',\
#       '5.01187234e+04',\
#       '6.30957344e+04',\
#       '7.94328235e+04',\
#       '1.00000000e+05',\
#       '1.25892541e+05',\
#       '1.58489319e+05',\
#       '1.99526231e+05',\
#       '2.51188643e+05',\
#       '3.16227766e+05',\
#       '3.98107171e+05',\
#       '5.01187234e+05',\
#       '6.30957344e+05',\
#       '7.94328235e+05',\
#       '1.00000000e+06',\
#       '1.25892541e+06',\
#       '1.58489319e+06',\
#       '1.99526231e+06',\
#       '2.51188643e+06',\
#       '3.16227766e+06',\
#       '3.98107171e+06',\
#       '5.01187234e+06',\
#       '6.30957344e+06',\
#       '7.94328235e+06',\
#       '1.00000000e+07',\
#       '1.25892541e+07',\
#       '1.58489319e+07',\
#       '1.99526231e+07',\
#       '2.51188643e+07',\
#       '3.16227766e+07',\
#       '3.98107171e+07',\
#       '5.01187234e+07',\
#       '6.30957344e+07',\
#       '7.94328235e+07',\
#       '1.00000000e+08']

#model='SM'
#model='LmuLtau'
model='4F'

#Grid points for Lmu-Ltau xsec computations [g', m_{Z'} in GeV]
#DEFAULT for dimuons notebook
if model=='LmuLtau':
    BSMstrs=['GP','MZP']
    BSMs = [#0.001
            ['0.001', '0.001'],
            ['0.001', '0.004'],
            ['0.001', '0.01' ],
            ['0.001', '0.02' ],
            ['0.001', '0.04' ],
            ['0.001', '0.08' ],
            ['0.001', '0.12' ],
            ['0.001', '0.2'  ],
            ['0.001', '0.4'  ],
            ['0.001', '0.6'  ],
            ['0.001', '0.8'  ],
            ['0.001', '1'    ],
            ['0.001', '1.2'  ],
            ['0.001', '2'    ],
            ['0.001', '4'    ],
            ['0.001', '8'    ],
            ['0.001', '10'   ],
            #0.002
            ['0.002', '0.001'],
            ['0.002', '0.004'],
            ['0.002', '0.01' ],
            ['0.002', '0.02' ],
            ['0.002', '0.04' ],
            ['0.002', '0.08' ],
            ['0.002', '0.12' ],
            ['0.002', '0.2'  ],
            ['0.002', '0.4'  ],
            ['0.002', '0.8'  ],
            ['0.002', '1'    ],
            ['0.002', '1.2'  ],
            ['0.002', '2'    ],
            ['0.002', '4'    ],
            ['0.002', '8'    ],
            ['0.002', '10'   ],
            #0.003
            ['0.003', '0.001'],
            ['0.003', '0.004'],
            ['0.003', '0.01' ],
            ['0.003', '0.02' ],
            ['0.003', '0.04' ],
            ['0.003', '0.08' ],
            ['0.003', '0.12' ],
            ['0.003', '0.2'  ],
            ['0.003', '0.4'  ],
            ['0.003', '0.8'  ],
            ['0.003', '1'    ],
            ['0.003', '1.2'  ],
            ['0.003', '2'    ],
            ['0.003', '4'    ],
            ['0.003', '8'    ],
            ['0.003', '10'   ],
            #0.005
            ['0.005', '0.001'],
            ['0.005', '0.004'],
            ['0.005', '0.01' ],
            ['0.005', '0.02' ],
            ['0.005', '0.04' ],
            ['0.005', '0.08' ],
            ['0.005', '0.12' ],
            ['0.005', '0.2'  ],
            ['0.005', '0.4'  ],
            ['0.005', '0.8'  ],
            ['0.005', '1.2'  ],
            ['0.005', '1'    ],
            ['0.005', '2'    ],
            ['0.005', '4'    ],
            ['0.005', '8'    ],
            ['0.005', '10'   ]]
elif model=='4F':
    BSMstrs=['dGV','dGA']
    #For interpolation grid
    BSMs = []
    #dGAvals = ['1.00']
    dGAvals = ['-2.00', '-1.75', '-1.50', '-1.25', '-1.00',\
               '-0.75', '-0.50', '-0.25',  '0.00',  '0.25',\
                '0.50',  '0.75',  '1.00',  '1.25',  '1.50',\
                '1.75',  '2.00',  '2.25',  '2.50',  '2.75',\
                '3.00',  '3.25',  '3.50',  '3.75',  '4.00']
    #dGVvals = ['-2.00']
    dGVvals = ['-5.00', '-4.75', '-4.50', '-4.25', '-4.00',\
               '-3.75', '-3.50', '-3.25', '-3.00', '-2.75',\
               '-2.50', '-2.25', '-2.00', '-1.75', '-1.50',\
               '-1.25', '-1.00', '-0.75', '-0.50', '-0.25',\
                '0.00',  '0.25',  '0.50',  '0.75',  '1.00']
    #dGVvals = ['0.00']
    #dGAvals = ['0.00']
    BSMs = [[dGV, dGA] for dGV in dGVvals for dGA in dGAvals]

elif model=='SM': BSMs=[[]]  #No need for g', m_Z' in SM computations

cmds=[]
for proc in procs:
    for BSM in BSMs:
        proccmds=[]
        for i in range(len(Enu)):
            cmd = './tridents.exe ' + proc[0] + ' ' + material + ' 1 ' + Enu[i]
            cmd += ' ' + model
            if model!='SM': cmd += ' ' + BSM[0] + ' ' + BSM[1]
            if   mode=='xsec':
                cmd += ' CrossSection'
            elif mode=='evts': 
                cmd += ' GenerateEvents 100000 '  #Modify number of events here
                cmd += material
                if model=='SM':
                    cmd += '_SM'                
                else:
                    cmd += '_' + BSMstrs[0] + '-' + BSM[0].replace('.','d')
                    cmd += '_' + BSMstrs[1] + '-' + BSM[1].replace('.','d')
                cmd += '_' + proc[1]        #numu, nubarmu, ...
                Enustr = str(i+1)
                if len(Enustr)<2: Enustr = '0'+Enustr
                cmd += '_' + Enustr + '.txt'
            proccmds.append(cmd)
        cmds.append(proccmds)

ncpu = min(8,len(cmds))
spaceAfterLines = [int((n+1)*len(cmds)/ncpu) for n in range(ncpu)][:-1]
for i,cmd in enumerate(cmds):
    for proccmd in cmd:
        print(proccmd)
    if i in spaceAfterLines: print('\n\n\n\n')
    
